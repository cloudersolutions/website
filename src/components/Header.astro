---
import { twMerge } from 'tailwind-merge';
import ArrowUpRightIcon from 'lucide-astro/ArrowUpRight';
import MenuIcon from 'lucide-astro/Menu';
import XIcon from 'lucide-astro/X';
import navigation from '@data/navigation.yml';
import site from '@data/site.yml';
import Logo from '@components/Logo.astro';

interface Props {
  class?: string;
}

const { class: className } = Astro.props;

const { pathname } = Astro.url;

const navigationLinks = Object.entries(navigation)
  .filter(([key, _]) => !['home', 'privacy'].includes(key))
  .map(([_, item]) => item);

const isActive = (href: string) => {
  if (href === '/') return pathname === href;
  return pathname.startsWith(href);
};

const isExternal = (href: string) => {
  return href.startsWith('http');
};

const defaultClasses =
  'bg-neutral-50 py-4 text-neutral-900 dark:bg-neutral-950 dark:text-neutral-100';
---

<header class:list={twMerge(defaultClasses, className)}>
  <div class="container flex items-center gap-x-4">
    <a href="/" class="mr-auto py-2">
      <Logo size={20} />
    </a>
    <!-- Mobile menu -->
    <label
      class="relative left-1.5 -m-1.5 block rounded-full p-3 transition active:bg-current/10 md:hidden"
      for="mobile-menu"
    >
      <input class="peer hidden" type="checkbox" id="mobile-menu" />
      <MenuIcon class="relative block peer-checked:hidden" />
      <XIcon class="relative z-30 hidden peer-checked:block" />
      <div
        class:list={twMerge(
          'pointer-events-none invisible fixed inset-0 top-17 z-20 h-auto w-full border-t border-current/10 bg-neutral-50 opacity-0 transition duration-300 peer-checked:pointer-events-auto peer-checked:visible peer-checked:opacity-100',
          defaultClasses,
          className
        )}
      >
        <nav class="flex h-full flex-col">
          {
            navigationLinks.map(({ title, href }) => (
              <a
                href={href}
                aria-current={isActive(href) ? 'page' : undefined}
                class="inline-flex items-center gap-0.5 px-6 py-2.5 text-lg font-medium text-current underline-offset-3 transition select-none active:bg-current/10 aria-[current]:underline"
              >
                {title}
                {isExternal(href) && (
                  <ArrowUpRightIcon size={14} class="mt-px flex-shrink-0 opacity-50" />
                )}
              </a>
            ))
          }
          <p class="mt-auto mb-2 px-6 font-medium text-current">Follow us on</p>
          {
            site.social.map(({ title, href }) => (
              <a
                href={href}
                class="inline-block px-6 py-2 text-current/50 transition select-none active:text-current"
              >
                {title}
              </a>
            ))
          }
        </nav>
      </div>
    </label>
    <!-- Desktop menu -->
    <nav class="-mx-3.5 hidden flex-wrap md:flex" data-testid="menu">
      {
        navigationLinks.map(({ title, href }) => (
          <a
            href={href}
            aria-current={isActive(href) ? 'page' : undefined}
            class:list={twMerge(
              'inline-flex items-center gap-0.5 rounded-full px-3.5 leading-9 font-medium text-current decoration-1 underline-offset-6 transition select-none hover:bg-current/10 aria-[current]:text-current aria-[current]:underline aria-[current]:hover:bg-transparent',
              navigationLinks.some((i) => isActive(i.href)) && 'text-current/65 hover:text-current'
            )}
          >
            {title}
            {isExternal(href) && (
              <ArrowUpRightIcon size={14} class="mt-px flex-shrink-0 opacity-50" />
            )}
          </a>
        ))
      }
    </nav>
  </div>
</header>

<script>
  const menu = document.getElementById('mobile-menu');

  if (menu instanceof HTMLInputElement) {
    menu.checked = false;
    document.documentElement.classList.remove('overflow-y-hidden');
  }

  menu?.addEventListener('change', (e) => {
    if (e.currentTarget instanceof HTMLInputElement) {
      document.documentElement.classList.toggle('overflow-y-hidden', e.currentTarget.checked);
    }
  });
</script>
