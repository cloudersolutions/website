---
import { twMerge } from 'tailwind-merge';
import ArrowUpRightIcon from 'lucide-astro/ArrowUpRight';
import type { NavItem } from '@data/types';
import navigation from '@data/navigation.yml';
import Logo from '@components/Logo.astro';

interface Props {
  class?: string;
}

const { class: className } = Astro.props;

const { pathname } = Astro.url;
const navItems: NavItem[] = navigation.items.filter((item: NavItem) => item.showInMainNav);

const isActive = (href: string) => {
  if (href === '/') return pathname === href;
  return pathname.startsWith(href);
};

const isExternal = (href: string) => {
  return href.startsWith('http');
};
---

<header
  class:list={twMerge(
    'bg-neutral-50 py-4 text-neutral-900 dark:bg-neutral-950 dark:text-neutral-100',
    className
  )}
>
  <div class="container flex flex-wrap gap-x-6 gap-y-2">
    <a href="/" class="mr-auto py-2">
      <Logo size={20} />
    </a>
    <nav class="-mx-3.5 flex flex-wrap">
      {
        navItems.map(({ title, href }) => (
          <a
            href={href}
            aria-current={isActive(href) ? 'page' : undefined}
            class:list={twMerge(
              'inline-flex items-center gap-0.5 rounded-full px-3.5 leading-9 font-medium text-current underline-offset-8 transition select-none hover:bg-current/5 aria-[current]:text-current aria-[current]:underline aria-[current]:hover:bg-transparent',
              navItems.some((i) => isActive(i.href)) && 'text-current/65 hover:text-current'
            )}
          >
            {title}
            {isExternal(href) && (
              <ArrowUpRightIcon size={16} class="mt-0.5 flex-shrink-0 opacity-50" />
            )}
          </a>
        ))
      }
    </nav>
  </div>
</header>
