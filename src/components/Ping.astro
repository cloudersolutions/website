---
import { twMerge } from 'tailwind-merge';

interface Props {
  color: 'pink' | 'purple' | 'indigo' | 'sky';
  isAnimated?: boolean;
}

const { color, isAnimated } = Astro.props;

const colorClasses = {
  indigo: {
    bg: 'bg-indigo-300',
    fg: 'bg-indigo-400',
    outline: 'outline-indigo-300/25'
  },
  sky: {
    bg: 'bg-sky-300',
    fg: 'bg-sky-400',
    outline: 'outline-sky-300/25'
  },
  purple: {
    bg: 'bg-purple-300',
    fg: 'bg-purple-400',
    outline: 'outline-purple-300/25'
  },
  pink: {
    bg: 'bg-pink-300',
    fg: 'bg-pink-400',
    outline: 'outline-pink-300/25'
  }
};
---

{
  isAnimated ? (
    <span class="relative flex size-2.5 flex-shrink-0">
      <span
        class:list={twMerge(
          'absolute inline-flex h-full w-full animate-ping rounded-full opacity-75 [animation-duration:2000ms]',
          colorClasses[color].bg
        )}
      />
      <span
        class:list={twMerge(
          'shadow-inset relative inline-flex size-2.5 rounded-full shadow-current/10',
          colorClasses[color].fg
        )}
      />
    </span>
  ) : (
    <span
      class:list={twMerge(
        'shadow-inset inline-flex size-2.5 flex-shrink-0 rounded-full shadow-current/10 outline-4',
        colorClasses[color].outline,
        colorClasses[color].fg
      )}
    />
  )
}
