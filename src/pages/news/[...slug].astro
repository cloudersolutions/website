---
import { getCollection } from 'astro:content';
import { formatDate } from '@utils/date.ts';
import ProseLayout from '@layouts/ProseLayout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('news', ({ data }) =>
    import.meta.env.PROD ? !data.draft : true
  );
  const sortedPosts = posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

  return sortedPosts.map((post, index) => ({
    params: { slug: post.slug },
    props: {
      post,
      previousPost: sortedPosts[index - 1] || null,
      nextPost: sortedPosts[index + 1] || null
    }
  }));
}

const { post, previousPost, nextPost } = Astro.props;
const { Content } = await post.render();
---

<ProseLayout title={post.data.title} description={post.data.description} image={post.data.cover}>
  <article>
    <header>
      <time datetime={post.data.date.toISOString()}>{formatDate(post.data.date)}</time>
      <h1>{post.data.title}</h1>
    </header>
    <section>
      <Content />
    </section>
  </article>
  <nav>
    {previousPost && <a href={`/news/${previousPost.slug}`}>&larr; {previousPost.data.title}</a>}
    <span></span>
    {nextPost && <a href={`/news/${nextPost.slug}`}>{nextPost.data.title} &rarr;</a>}
  </nav>
</ProseLayout>

<style>
  nav {
    display: flex;
    padding: 2rem 0;

    span {
      width: 100%;
    }
  }
</style>
